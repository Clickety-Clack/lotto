/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Alpha } from "./Alpha";

export class AlphaFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Alpha> {
    return super.deploy(overrides || {}) as Promise<Alpha>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Alpha {
    return super.attach(address) as Alpha;
  }
  connect(signer: Signer): AlphaFactory {
    return super.connect(signer) as AlphaFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Alpha {
    return new Contract(address, _abi, signerOrProvider) as Alpha;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "balanceof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "destAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002161001c61004c565b610050565b600180546001600160a01b03191673b627f317d45fceedbb5993c606061a52da1727c11790556100a0565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107eb806100af6000396000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c80633d64125b14610072578063715018a61461009b57806376890c58146100a55780638da5cb5b146100b8578063b6b55f25146100cd578063e1ad418e146100e0578063f2fde38b146100f3575b600080fd5b610085610080366004610523565b610106565b6040516100929190610780565b60405180910390f35b6100a3610125565b005b6100a36100b336600461053d565b610179565b6100c06101d3565b60405161009291906105ba565b6100a36100db366004610586565b6101e2565b6100856100ee366004610523565b61020c565b6100a3610101366004610523565b61021e565b6001600160a01b0381166000908152600260205260409020545b919050565b61012d61028f565b6001600160a01b031661013e6101d3565b6001600160a01b03161461016d5760405162461bcd60e51b8152600401610164906106ca565b60405180910390fd5b6101776000610293565b565b61018161028f565b6001600160a01b03166101926101d3565b6001600160a01b0316146101b85760405162461bcd60e51b8152600401610164906106ca565b6001546101cf906001600160a01b031683836102e3565b5050565b6000546001600160a01b031690565b6001546101fa906001600160a01b031633308461033e565b33600090815260026020526040902055565b60026020526000908152604090205481565b61022661028f565b6001600160a01b03166102376101d3565b6001600160a01b03161461025d5760405162461bcd60e51b8152600401610164906106ca565b6001600160a01b0381166102835760405162461bcd60e51b81526004016101649061063e565b61028c81610293565b50565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103398363a9059cbb60e01b84846040516024016103029291906105f2565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610365565b505050565b61035f846323b872dd60e01b858585604051602401610302939291906105ce565b50505050565b60006103ba826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103f49092919063ffffffff16565b80519091501561033957808060200190518101906103d89190610566565b6103395760405162461bcd60e51b815260040161016490610736565b6060610403848460008561040d565b90505b9392505050565b60608247101561042f5760405162461bcd60e51b815260040161016490610684565b610438856104cd565b6104545760405162461bcd60e51b8152600401610164906106ff565b600080866001600160a01b03168587604051610470919061059e565b60006040518083038185875af1925050503d80600081146104ad576040519150601f19603f3d011682016040523d82523d6000602084013e6104b2565b606091505b50915091506104c28282866104d3565b979650505050505050565b3b151590565b606083156104e2575081610406565b8251156104f25782518084602001fd5b8160405162461bcd60e51b8152600401610164919061060b565b80356001600160a01b038116811461012057600080fd5b600060208284031215610534578081fd5b6104068261050c565b6000806040838503121561054f578081fd5b6105588361050c565b946020939093013593505050565b600060208284031215610577578081fd5b81518015158114610406578182fd5b600060208284031215610597578081fd5b5035919050565b600082516105b0818460208701610789565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b600060208252825180602084015261062a816040850160208701610789565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b90815260200190565b60005b838110156107a457818101518382015260200161078c565b8381111561035f575050600091015256fea2646970667358221220c5aecb6348287b27f218c8e846d0a8ef09dc2601122af2c79d7a39aa4e2d27e564736f6c63430008000033";
