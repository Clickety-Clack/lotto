/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Faith } from "./Faith";

export class FaithFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Faith> {
    return super.deploy(overrides || {}) as Promise<Faith>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Faith {
    return super.attach(address) as Faith;
  }
  connect(signer: Signer): FaithFactory {
    return super.connect(signer) as FaithFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Faith {
    return new Contract(address, _abi, signerOrProvider) as Faith;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_initialSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052600560808190526408c8292a8960db1b60a090815262000026919081620002c8565b50604080518082019091526004808252634641544560e01b60209092019182526200005491600691620002c8565b506b033b2e3c9fd0803ce80000006007553480156200007257600080fd5b50600580546200008290620003d3565b80601f0160208091040260200160405190810160405280929190818152602001828054620000b090620003d3565b8015620001015780601f10620000d55761010080835404028352916020019162000101565b820191906000526020600020905b815481529060010190602001808311620000e357829003601f168201915b5050505050600680546200011590620003d3565b80601f01602080910402602001604051908101604052809291908181526020018280546200014390620003d3565b8015620001945780601f10620001685761010080835404028352916020019162000194565b820191906000526020600020905b8154815290600101906020018083116200017657829003601f168201915b50508451620001ae935060039250602086019150620002c8565b508051620001c4906004906020840190620002c8565b505050620001db33600754620001e160201b60201c565b62000410565b6001600160a01b038216620002135760405162461bcd60e51b81526004016200020a906200036e565b60405180910390fd5b6200022160008383620002c3565b8060026000828254620002359190620003ae565b90915550506001600160a01b0382166000908152602081905260408120805483929062000264908490620003ae565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620002a9908590620003a5565b60405180910390a3620002bf60008383620002c3565b5050565b505050565b828054620002d690620003d3565b90600052602060002090601f016020900481019282620002fa576000855562000345565b82601f106200031557805160ff191683800117855562000345565b8280016001018555821562000345579182015b828111156200034557825182559160200191906001019062000328565b506200035392915062000357565b5090565b5b8082111562000353576000815560010162000358565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60008219821115620003ce57634e487b7160e01b81526011600452602481fd5b500190565b600281046001821680620003e857607f821691505b602082108114156200040a57634e487b7160e01b600052602260045260246000fd5b50919050565b610a8780620004206000396000f3fe608060405234801561001057600080fd5b50600436106100ba5760003560e01c806306fdde03146100bf578063095ea7b3146100dd57806318160ddd146100fd57806323b872dd14610112578063313ce56714610125578063395093511461013a57806370a082311461014d57806395d89b4114610160578063a457c2d714610168578063a9059cbb1461017b578063b09f12661461018e578063c3b2d33714610196578063d28d88521461019e578063dd62ed3e146101a6575b600080fd5b6100c76101b9565b6040516100d491906107a7565b60405180910390f35b6100f06100eb366004610773565b61024b565b6040516100d4919061079c565b610105610268565b6040516100d491906109db565b6100f0610120366004610738565b61026e565b61012d610307565b6040516100d491906109e4565b6100f0610148366004610773565b61030c565b61010561015b3660046106e5565b610360565b6100c761037f565b6100f0610176366004610773565b61038e565b6100f0610189366004610773565b610407565b6100c761041b565b6101056104a9565b6100c76104af565b6101056101b4366004610706565b6104bc565b6060600380546101c890610a16565b80601f01602080910402602001604051908101604052809291908181526020018280546101f490610a16565b80156102415780601f1061021657610100808354040283529160200191610241565b820191906000526020600020905b81548152906001019060200180831161022457829003601f168201915b5050505050905090565b600061025f6102586104e7565b84846104eb565b50600192915050565b60025490565b600061027b84848461059f565b6001600160a01b03841660009081526001602052604081208161029c6104e7565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156102e85760405162461bcd60e51b81526004016102df906108c5565b60405180910390fd5b6102fc856102f46104e7565b8584036104eb565b506001949350505050565b601290565b600061025f6103196104e7565b8484600160006103276104e7565b6001600160a01b03908116825260208083019390935260409182016000908120918b168152925290205461035b91906109f2565b6104eb565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101c890610a16565b6000806001600061039d6104e7565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156103e95760405162461bcd60e51b81526004016102df90610996565b6103fd6103f46104e7565b858584036104eb565b5060019392505050565b600061025f6104146104e7565b848461059f565b6006805461042890610a16565b80601f016020809104026020016040519081016040528092919081815260200182805461045490610a16565b80156104a15780601f10610476576101008083540402835291602001916104a1565b820191906000526020600020905b81548152906001019060200180831161048457829003601f168201915b505050505081565b60075481565b6005805461042890610a16565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105115760405162461bcd60e51b81526004016102df90610952565b6001600160a01b0382166105375760405162461bcd60e51b81526004016102df9061083d565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105929085906109db565b60405180910390a3505050565b6001600160a01b0383166105c55760405162461bcd60e51b81526004016102df9061090d565b6001600160a01b0382166105eb5760405162461bcd60e51b81526004016102df906107fa565b6105f68383836106c9565b6001600160a01b0383166000908152602081905260409020548181101561062f5760405162461bcd60e51b81526004016102df9061087f565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106669084906109f2565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b091906109db565b60405180910390a36106c38484846106c9565b50505050565b505050565b80356001600160a01b038116811461037a57600080fd5b6000602082840312156106f6578081fd5b6106ff826106ce565b9392505050565b60008060408385031215610718578081fd5b610721836106ce565b915061072f602084016106ce565b90509250929050565b60008060006060848603121561074c578081fd5b610755846106ce565b9250610763602085016106ce565b9150604084013590509250925092565b60008060408385031215610785578182fd5b61078e836106ce565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b818110156107d3578581018301518582016040015282016107b7565b818111156107e45783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b60ff91909116815260200190565b60008219821115610a1157634e487b7160e01b81526011600452602481fd5b500190565b600281046001821680610a2a57607f821691505b60208210811415610a4b57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220361c7e08d6b56164ec13dcbcc024cb297249a8a172cb1bf882b88f41aea202c564736f6c63430008000033";
